searchState.loadedDescShard("cmprsd", 0, "CMPRSD is a compression crate with the goal of providing a …\nHuffman coding and decoding.\nStruct that represents compressed data.\nRepresents errors that can occure during compression. So …\nIt happens when the text to compressed is made of only one …\nStruct that represents the frequency of the different …\nIs what happens when you try to compress and empty string.\nAppend bits of the other compressed data to self.\nVector of compressed bytes. each compressed block is …\ninstanciate a frequency.\nchar that the frequency represents. It is optional as in …\nCompress takes as input the data as a string and returns …\nfrequency is a value between 0 and 65536 and is equal to …\nA compressed huffman data can be decompressed to find back …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nTake as input a vector of 0s and 1s and store them as bits.\nReturns a compressed data entity which stores 0 bits.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nsize of the compressed data in bits\nAs we store blocks of 8 bits, not all 8 bits are used at …\nHelper function to pad a block of bits. Usefull when …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")